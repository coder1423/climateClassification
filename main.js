//변수 생성
//디지털형
var 자전여부 = 0; var 타일경계 = 0; var 바람표시 = 0; 강수표시 = 0; 기온표시 = 0;
var 지도모드 = '단순기후'; //기후, 단순기후, 기온, 강수, 편집
var 에디터모드 = '땅';

//아날로그형
var 그래프크기 = 400;
var 타일크기 = 48;
var 태양열 = 60; var 기본기온 = -30; var 기울기 = 1;
var 선택분기 = 1; var 선택타일 = 1;

//외부파일
var 지도크기 = window.innerHeight-20;
var 북img = new Image(); var 북서img = new Image(); var 북동img = new Image();
var 남img = new Image(); var 남서img = new Image(); var 남동img = new Image();
var 고압대img = new Image(); var 북고압대img = new Image(); var 남고압대img = new Image();
var 저압대img = new Image();
북img.src = "./direction/북.png"; 북서img.src = "./direction/북서.png"; 북동img.src = "./direction/북동.png";
남img.src = "./direction/남.png"; 남서img.src = "./direction/남서.png"; 남동img.src = "./direction/남동.png";
고압대img.src = "./direction/고압대.png"; 북고압대img.src = "./direction/북고압대.png"; 남고압대img.src = "./direction/남고압대.png";

//클래스생성
class 타일지정 {
  constructor(지형) {this.지형 = 지형;}
  기온 = []; 강수량 = []; 바람방향 = []; 기단영향 = []; 바다영향 = [];
  연평균기온 = 0; 연강수량 = 0; 최난월기온 = 0; 최한월기온 = 0; 증발력 = 0;
  구분1차 = '없음'; 구분2차 = '없음'; 구분3차 = '없음';
}

//리스트생성
var 타일정보 = [];
for (let 순서 = 1; 순서 <= 361; 순서++) {타일정보[`${순서}`] = new 타일지정('땅');}

var 순서 = 0; var 태양열면적 = [];
for (let 위도 = 9; 위도 >= -9; 위도--) {태양열면적[`${순서}`] = ((Math.sin(((위도*9.5)+4.75)*Math.PI/180)*6) - (Math.sin(((위도*9.5)-4.75)*Math.PI/180)*6)).toFixed(3); 순서++;}

var 바람방향 = ['남','남','남','저압대','북','북','고압대','남','남','저압대','북','북','고압대','남','남','저압대','북','북','북']
var 북A기단 = []; var 북P기단 = []; var 북T기단 = []; var E기단 = []; var 남T기단 = []; var 남P기단 = []; var 남A기단 = [];

//함수생성
function 기후출력색(타일선택) {
  if (지도모드 == '흰색') {return 'white';} else {
    let 지형 = 타일정보[타일선택].지형
    if(지형 == '땅') {
      let 구분1차 = 타일정보[타일선택].구분1차
      let 구분2차 = 타일정보[타일선택].구분2차
      let 구분3차 = 타일정보[타일선택].구분3차
      if (지도모드 == '단순기후') {
        if (구분1차 == 'A')      {return 'Green';}
        else if (구분1차 == 'B') {return 'GoldenRod';}
        else if (구분1차 == 'C') {return 'LawnGreen';}
        else if (구분1차 == 'D') {return 'DeepSkyBlue';}
        else if (구분1차 == 'E') {return 'WhiteSmoke';}

      } else if (지도모드 == '기후') {
        if (구분1차 == 'A') {
          if        (구분2차 == 'f') {return 'rgb(150, 0, 0, 1)';}
          else if   (구분2차 == 'w') {return 'rgb(255, 204, 204, 1)';}
          else if   (구분2차 == 's') {return 'rgb(255, 152, 152, 1)';}
        } else if (구분1차 == 'B') {
          if        (구분2차 == 'W') {
            if      (구분3차 == 'h') {return 'rgb(255, 204, 0, 1)';}
            else if (구분3차 == 'k') {return 'rgb(255, 255, 100, 1)';}
          } else if (구분2차 == 'S') {
            if      (구분3차 == 'h') {return 'rgb(204, 141, 20, 1)';}
            else if (구분3차 == 'k') {return 'rgb(204, 170, 84, 1)';}
          }
        } else if (구분1차 == 'C') {
          if        (구분2차 == 'f') {
            if      (구분3차 == 'a') {return 'rgb(0, 50, 0, 1)';}
            else if (구분3차 == 'b') {return 'rgb(0, 80, 0, 1)';}
            else if (구분3차 == 'c') {return 'rgb(4, 117, 4, 1)';}
          } else if (구분2차 == 'w') {
            if      (구분3차 == 'a') {return 'rgb(180, 100, 0, 1)';}
            else if (구분3차 == 'b') {return 'rgb(150, 100, 1, 1)';}
            else if (구분3차 == 'c') {return 'rgb(86, 59, 2, 1)';}
          } else if (구분2차 == 's') {
            if      (구분3차 == 'a') {return 'rgb(0, 255, 0, 1)';}
            else if (구분3차 == 'b') {return 'rgb(150, 255, 0, 1)';}
            else if (구분3차 == 'c') {return 'rgb(200, 255, 1, 1)';}
          }
        } else if (구분1차 == 'D') {
          if        (구분2차 == 'f') {
            if      (구분3차 == 'a') {return 'rgb(50, 0, 50, 1)';}
            else if (구분3차 == 'b') {return 'rgb(100, 0, 100, 1)';}
            else if (구분3차 == 'c') {return 'rgb(200, 0, 200, 1)';}
            else if (구분3차 == 'd') {return 'rgb(199, 20, 133, 1)';}
          } else if (구분2차 == 'w') {
            if      (구분3차 == 'a') {return 'rgb(201, 181, 255, 1)';}
            else if (구분3차 == 'b') {return 'rgb(154, 126, 180, 1)';}
            else if (구분3차 == 'c') {return 'rgb(138, 89, 179, 1)';}
            else if (구분3차 == 'd') {return 'rgb(114, 38, 173, 1)';}
          } else if (구분2차 == 's') {
            if      (구분3차 == 'a') {return 'rgb(255, 109, 255, 1)';}
            else if (구분3차 == 'b') {return 'rgb(252, 180, 253, 1)';}
            else if (구분3차 == 'c') {return 'rgb(230, 200, 255, 1)';}
            else if (구분3차 == 'd') {return 'rgb(200, 200, 200, 1)';}
          }
        } else if (구분1차 == 'E') {
          if (구분2차 == 'T')        {return 'rgb(100, 255, 255, 1)';}
          if (구분2차 == 'F')        {return 'rgb(100, 150, 255, 1)';}
        }
      } else { //편집모드나 오류 대처용
        return 'SaddleBrown';
      }
    } else if(지형 == '바다') {return 'RoyalBlue';}
  }
}

function 출력() {
  var canvas = document.getElementById('지도'); var ctx = canvas.getContext("2d");
  지도크기 = window.innerHeight-20;
  document.getElementById('지도').style.width = 지도크기 + 'px';
  document.getElementById('지도').style.height = 지도크기 + 'px';

  for (let 위도 = 1; 위도 <= 19; 위도++) {
    for (let 경도 = 0; 경도 < 19; 경도++) {
      let 타일선택 = (위도-1) * 19 + 경도 + 1
      ctx.fillStyle = 기후출력색(타일선택);
      ctx.fillRect(경도*타일크기, (위도-1)*타일크기, 타일크기, 타일크기);
      if (타일경계 == 1) {ctx.strokeStyle = 'black'; ctx.strokeRect(경도*타일크기, (위도-1)*타일크기, 타일크기, 타일크기);}
      if (기온표시 == 1 && !(지도모드 == '편집')) {
        let 기온 = ((타일정보[타일선택].기온[선택분기] - 기본기온) / 태양열);
        ctx.fillStyle = `rgb(255, 0, 0, ${기온 - 0.1})`;
        ctx.fillRect(경도*타일크기, (위도-1)*타일크기, 타일크기, 타일크기);
      } if (강수표시 == 1 && !(지도모드 == '편집')) {
        let 강수 = (타일정보[타일선택].강수량[선택분기] / 150);
        ctx.fillStyle = `rgb(0, 0, 255, ${강수})`;
        ctx.fillRect(경도*타일크기, (위도-1)*타일크기, 타일크기, 타일크기);
      } if (바람표시 == 1) {let 바람출력; let 바람방향 = 타일정보[타일선택].바람방향[선택분기];
        if (자전여부 == 0) {
          if (바람방향 == '북') {바람출력 = 북img;}
          else if (바람방향 == '남') {바람출력 = 남img;}
          else if (바람방향 == '고압대') {바람출력 = 고압대img;}
          if (바람방향 == '고압대' || 바람방향 == '북' || 바람방향 == '남') {ctx.drawImage(바람출력, 경도*타일크기, (위도-1)*타일크기, 타일크기, 타일크기);}
        } else {
          if (바람방향 == '북') {
            if (위도 < 10) {바람출력 = 북동img;}
            else if (10 < 위도) {바람출력 = 북서img }
            else {바람출력 = 북img;}
          } else if (바람방향 == '남') {
            if (위도 < 10) {바람출력 = 남서img;}
            else if (10 < 위도) {바람출력 = 남동img;}
            else {바람출력 = 남img;}
          } else if (바람방향 == '고압대') {
            if (위도 < 10) {바람출력 = 북고압대img;}
            else if (10 < 위도) {바람출력 = 남고압대img;}
            else {바람출력 = 고압대img;}
          } if (바람방향 == '고압대' || 바람방향 == '북' || 바람방향 == '남') {ctx.drawImage(바람출력, 경도*타일크기, (위도-1)*타일크기, 타일크기, 타일크기);}
        }
      }
    }
  }
}

function 바람방향계산(분기, 태양고도) {var 순서 = 0;
  for (let 위도 = 0; 위도 < 19; 위도++){
    for (let 경도 = 0; 경도 < 19; 경도++) {순서++;
      if (0 <= 위도-태양고도 && 위도-태양고도 <= 18) {타일정보[`${순서}`].바람방향[분기] = 바람방향[`${위도-태양고도}`];}
      else {타일정보[`${순서}`].바람방향[분기] = '없음';}
    }
  }
}

function 바다영향계산(분기) {
  for (let 순서 = 1; 순서 <= 361; 순서++) {타일정보[`${순서}`].바다영향[분기] = 0;}//초기화
  for (let 순서 = 1; 순서 <= 361; 순서++) {
    if (타일정보[`${순서}`].지형 == '바다') {
      let 바람방향 = 타일정보[`${순서}`].바람방향[분기]
      if (자전여부 == 0 || 172 <= 순서 && 순서 <= 190) { //자전의 영향이 없는 곳의 바람 영향
        if (바람방향 == '북' || 바람방향 == '고압대' && 19 < 순서 && !(타일정보[`${순서-19}`].지형 == '바다')) { 타일정보[`${순서-19}`].바다영향[분기] = 1;}
        if (바람방향 == '남' || 바람방향 == '고압대' && 순서 < 343 && !(타일정보[`${순서+19}`].지형 == !'바다')) { 타일정보[`${순서+19}`].바다영향[분기] = 1;}
      } else { //자전 할 때의 바람 영향
        if (순서 < 172) {//북반구
          if (바람방향 == '북' || 바람방향 == '고압대') { //북풍
            if (19 < 순서) { 타일정보[`${순서-19}`].바다영향[분기] = 1; }
            if (!(순서 % 19 == 0)) {
              if (!(바람방향 == '고압대')) {타일정보[`${순서+1}`].바다영향[분기] = 1;}
              if (19 < 순서) {타일정보[`${순서-18}`].바다영향[분기] = 1;}
            }
          } if (바람방향 == '남' || 바람방향 == '고압대') { //남풍
            타일정보[`${순서+19}`].바다영향[분기] = 1;
            if (!(순서 % 19 == 1)) {
              if (!(바람방향 == '고압대')) {타일정보[`${순서-1}`].바다영향[분기] = 1;}
              if (19 < 순서) {타일정보[`${순서+18}`].바다영향[분기] = 1;}
            }
          }

        }else if (190 < 순서) { //남반구
          if (바람방향 == '북' || 바람방향 == '고압대') { //북풍
            타일정보[`${순서-19}`].바다영향[분기] = 1;
            if (!(순서 % 19 == 1)) {
              if (!(바람방향 == '고압대')) {타일정보[`${순서-1}`].바다영향[분기] = 1;}
              if (19 < 순서) { 타일정보[`${순서-20}`].바다영향[분기] = 1; }
            }
          } if (바람방향 == '남' || 바람방향 == '고압대') { //남풍
              if (순서 < 343) { 타일정보[`${순서+19}`].바다영향[분기] = 1; }
              if (!(순서 % 19 == 0)) {
                if (!(바람방향 == '고압대')) {타일정보[`${순서+1}`].바다영향[분기] = 1;}
                if (순서 < 343) {타일정보[`${순서+20}`].바다영향[분기] = 1;}
              }
          }
        }
      }
    }
  }
}

function 기단생성() {
  var 순서 = 0; for (let 경도 = 1; 경도 <= 19; 경도++) {순서++; 북A기단[경도] = 타일정보[`${순서}`].지형;}
  순서 += 38;   for (let 경도 = 1; 경도 <= 19; 경도++) {순서++; 북P기단[경도] = 타일정보[`${순서}`].지형;}
  순서 += 38;   for (let 경도 = 1; 경도 <= 19; 경도++) {순서++; 북T기단[경도] = 타일정보[`${순서}`].지형;}
  순서 += 38;   for (let 경도 = 1; 경도 <= 19; 경도++) {순서++; E기단[경도]   = 타일정보[`${순서}`].지형;}
  순서 += 38;   for (let 경도 = 1; 경도 <= 19; 경도++) {순서++; 남T기단[경도] = 타일정보[`${순서}`].지형;}
  순서 += 38;   for (let 경도 = 1; 경도 <= 19; 경도++) {순서++; 남P기단[경도] = 타일정보[`${순서}`].지형;}
  순서 += 38;   for (let 경도 = 1; 경도 <= 19; 경도++) {순서++; 남A기단[경도] = 타일정보[`${순서}`].지형;}
}

function 저압대강수량계산(위도, 종류, 분기) {let 순서 = (위도-1) * 19;
  if (종류 == '적도저압대') { for (let 경도 = 1; 경도 <= 19; 경도++) { 순서++; 타일정보[`${순서}`].강수량[분기] += 100 } }
  else { for (let 경도 = 1; 경도 <= 19; 경도++) { 순서++; if (타일정보[`${ 순서 }`].바다영향[분기] == 0) { 타일정보[`${순서}`].강수량[분기] += 50 } } }
}

function 강수량계산(분기, 태양고도) {
  //기단 영향 계산
  var 순서 = 0;
  for (let 위도 = 1; 위도 <= 19; 위도++) {
    if (위도 == 1 + 태양고도)       {for (let 경도 = 1; 경도 <= 19; 경도++) {순서++; 타일정보[`${순서}`].기단영향[분기] = 북A기단[경도];}}
    else if (위도 == 7 + 태양고도)  {for (let 경도 = 1; 경도 <= 19; 경도++) {순서++; 타일정보[`${순서}`].기단영향[분기] = 북T기단[경도];}}
    else if (위도 == 13 + 태양고도) {for (let 경도 = 1; 경도 <= 19; 경도++) {순서++; 타일정보[`${순서}`].기단영향[분기] = 남T기단[경도];}}
    else if (위도 == 19 + 태양고도) {for (let 경도 = 1; 경도 <= 19; 경도++) {순서++; 타일정보[`${순서}`].기단영향[분기] = 남A기단[경도];}}
    else {for (let 경도 = 1; 경도 <= 19; 경도++) {순서++; 타일정보[`${순서}`].기단영향[분기] = 0;} }
  }

  //강수량 초기화, 항상풍 영향 강수, 기단 영향 강수
  for (let 위도 = 1; 위도 <= 19; 위도++) {for (let 경도 = 1; 경도 <= 19; 경도++) {let 순서 = ((위도-1)*19)+경도; 타일정보[`${순서}`].강수량[분기] = 0;
    if ((타일정보[`${순서}`].기단영향[분기] == 0)) { //기단영향 없음
      if (타일정보[`${순서}`].바다영향[분기] == 1) {타일정보[`${순서}`].강수량[분기] = 50;} else {타일정보[`${순서}`].강수량[분기] = 25;}
    }
    if      (위도 == 1  + 태양고도) {if (북A기단[경도] == '땅') {타일정보[`${순서}`].강수량[분기] += 0} else if   (북A기단[경도] == '바다') {타일정보[`${순서}`].강수량[분기] += 0}}
    else if (위도 == 3  + 태양고도) {if (북P기단[경도] == '땅') {타일정보[`${순서}`].강수량[분기] += 10} else if  (북P기단[경도] == '바다') {타일정보[`${순서}`].강수량[분기] += 10}}
    else if (위도 == 4  + 태양고도) {if (북P기단[경도] == '땅') {타일정보[`${순서}`].강수량[분기] += 30} else if  (북P기단[경도] == '바다') {타일정보[`${순서}`].강수량[분기] += 30}}
    else if (위도 == 5  + 태양고도) {if (북P기단[경도] == '땅') {타일정보[`${순서}`].강수량[분기] += 10} else if  (북P기단[경도] == '바다') {타일정보[`${순서}`].강수량[분기] += 10}}
    else if (위도 == 7  + 태양고도) {if (북T기단[경도] == '땅') {타일정보[`${순서}`].강수량[분기] += 0} else if   (북T기단[경도] == '바다') {타일정보[`${순서}`].강수량[분기] += 150}}
    else if (위도 == 10 + 태양고도) {if (E기단[경도]   == '땅') {타일정보[`${순서}`].강수량[분기] += 230} else if (E기단[경도] == '바다')  {타일정보[`${순서}`].강수량[분기] += 230}}
    else if (위도 == 13 + 태양고도) {if (남T기단[경도] == '땅') {타일정보[`${순서}`].강수량[분기] += 0} else if   (남T기단[경도] == '바다') {타일정보[`${순서}`].강수량[분기] += 150}}
    else if (위도 == 15 + 태양고도) {if (남P기단[경도] == '땅') {타일정보[`${순서}`].강수량[분기] += 10} else if  (남P기단[경도] == '바다') {타일정보[`${순서}`].강수량[분기] += 10}}
    else if (위도 == 16 + 태양고도) {if (남P기단[경도] == '땅') {타일정보[`${순서}`].강수량[분기] += 30} else if  (남P기단[경도] == '바다') {타일정보[`${순서}`].강수량[분기] += 30}}
    else if (위도 == 17 + 태양고도) {if (남P기단[경도] == '땅') {타일정보[`${순서}`].강수량[분기] += 10} else if  (남P기단[경도] == '바다') {타일정보[`${순서}`].강수량[분기] += 10}}
    else if (위도 == 19 + 태양고도) {if (남A기단[경도] == '땅') {타일정보[`${순서}`].강수량[분기] += 0} else if   (남A기단[경도] == '바다') {타일정보[`${순서}`].강수량[분기] += 0}}
  }}

  // 저압대 영향 강수
  저압대강수량계산(4, '고위도저압대', 분기)
  저압대강수량계산(10, '적도저압대', 분기)
  저압대강수량계산(16, '고위도저압대', 분기)
}

function 기온계산(분기, 태양고도) {
  var 순서 = 0;
  for (let 위도 = 0; 위도 < 19; 위도++) {
    for (let 경도 = 0; 경도 < 19; 경도++) {순서++;
      if (0 <= 위도-태양고도 && 위도-태양고도 <= 18) {타일정보[`${순서}`].기온[분기] = (((태양열면적[`${위도-태양고도}`] * 태양열)+기본기온).toFixed(3))*1;}
      else {타일정보[`${순서}`].기온[분기] = 기본기온}
    }
  }
}

function 기후구분() {
  for (let 위도 = 1; 위도 <= 19; 위도++) {
    for (let 경도 = 0; 경도 < 19; 경도++) {let 타일선택 = (위도-1) * 19 + 경도 + 1;
      if (위도 < 10) { var 여름 = 2; var 겨울 = 4;} //북반구
      else if (10 < 위도) { var 여름 = 4; var 겨울 = 2;} //남반구
      else {var 여름 = 1; var 겨울 = 2;} //적도

      타일정보[타일선택].연평균기온 = 0; 타일정보[타일선택].연강수량 = 0;
      for (let 순서 = 1; 순서 <= 4; 순서++) {타일정보[타일선택].연평균기온 += 타일정보[타일선택].기온[순서];}
      타일정보[타일선택].연평균기온 = (((타일정보[타일선택].연평균기온 / 4).toFixed(3))*1);
      for (let 순서 = 1; 순서 <= 4; 순서++) {타일정보[타일선택].연강수량 += (타일정보[타일선택].강수량[순서]) * 3;}

      //건조 기후 구분
      let 여름강수 = 타일정보[타일선택].강수량[여름] + 타일정보[타일선택].강수량[1]; let 겨울강수 = 타일정보[타일선택].강수량[겨울] + 타일정보[타일선택].강수량[1];
      if (여름강수 / (여름강수 + 겨울강수) > 0.7) {var 보정온도 = 14} //여름 강수 집중
      else if (겨울강수 / (여름강수 + 겨울강수) > 0.7) {var 보정온도 = 0} //겨울 강수 집중
      else {var 보정온도 = 7} //건우기 구별이 없음
      타일정보[타일선택].증발력 = (((20 * (타일정보[타일선택].연평균기온 + 보정온도)).toFixed(3))*1)

      if (타일정보[타일선택].연강수량 < 타일정보[타일선택].증발력) {타일정보[타일선택].구분1차 = 'B'; //건조기후
        if (타일정보[타일선택].연강수량 < ((타일정보[타일선택].증발력) / 2)) {타일정보[타일선택].구분2차 = 'W'} else {타일정보[타일선택].구분2차 = 'S'} //건조기후 2차 구분
        if (타일정보[타일선택].연평균기온 >= 18) {타일정보[타일선택].구분3차 = 'h'} else {타일정보[타일선택].구분3차 = 'k'} } //건조기후 3차 구분
      else {
        //최난월, 최한월
        타일정보[타일선택].최난월기온 = 타일정보[타일선택].기온[여름]; 타일정보[타일선택].최한월기온 = 타일정보[타일선택].기온[겨울];
        if ((타일정보[타일선택].최한월기온 < -3) && (타일정보[타일선택].최난월기온 < 10)) {타일정보[타일선택].구분1차 = 'E'; //한대기후
          if (타일정보[타일선택].최난월기온 < 0) {타일정보[타일선택].구분2차 = 'F';} else {타일정보[타일선택].구분2차 = 'T';} //한대기후 2차 구분
          타일정보[타일선택].구분3차 = '없음';} //3차 구분 제거
          
        else { //수목 기후
          //수목 기후 1차 구분
          if (18 <= 타일정보[타일선택].최한월기온) {타일정보[타일선택].구분1차 = 'A';} //열대기후
          else if ((타일정보[타일선택].최한월기온 < 18) && (-3 <= 타일정보[타일선택].최한월기온)) {타일정보[타일선택].구분1차 = 'C'} //온대기후
          else if ((타일정보[타일선택].최한월기온 < -3) && (10 <= 타일정보[타일선택].최난월기온)) {타일정보[타일선택].구분1차 = 'D';} //냉대기후
          else {console.log('오류'+타일선택);}

          //수목 기후 2차 구분
          if (타일정보[타일선택].강수량[여름] > 타일정보[타일선택].강수량[겨울]) {
            if (타일정보[타일선택].강수량[겨울] < ((타일정보[타일선택].강수량[여름]) / 10)) {타일정보[타일선택].구분2차 = 'w'} //여름우기
            else {타일정보[타일선택].구분2차 = 'f'} //연중습윤
          } else {
            if (타일정보[타일선택].강수량[여름] < ((타일정보[타일선택].강수량[겨울]) / 3) && (타일정보[타일선택].강수량[여름] < 30)) {타일정보[타일선택].구분2차 = 's'} //겨울우기
            else {타일정보[타일선택].구분2차 = 'f'} //연중습윤
          }
          //수목 기후 3차 구분
          if (!(타일정보[타일선택].구분1차 == 'A')) {
            if (타일정보[타일선택].구분1차 == 'D' && 타일정보[타일선택].최한월기온 < -38) {타일정보[타일선택].구분3차 = 'd'} //냉대기후 한정 최한월기온 -38도 이하인지 확인
            else {let 십도이상기간 = 0; for (let 순서 = 1; 순서 <= 4; 순서++) {if (10 < 타일정보[타일선택].기온[순서]) {십도이상기간 += 3}} //기온 10도 넘는 기간 계산
              if (4 <= 십도이상기간) {if (22 <= 타일정보[타일선택].최난월기온) {타일정보[타일선택].구분3차 = 'a'} else {타일정보[타일선택].구분3차 = 'b'} //4달 이상 기온 10도 넘음
              } else {타일정보[타일선택].구분3차 = 'c'}
            }
          } else {타일정보[타일선택].구분3차 = '없음';}
        }
      }
    }
  }
}

function 지형에디터(선택타일) {if (에디터모드 == '땅') {타일정보[`${선택타일}`].지형 = '땅';} else if (에디터모드 == '바다') {타일정보[`${선택타일}`].지형 = '바다';} 출력();}

function 타일정보선택(선택타일) {
  if ((타일정보[선택타일].구분3차 == '없음')) {document.getElementById("기후").innerHTML = '기후 : ' + 타일정보[선택타일].구분1차+타일정보[선택타일].구분2차}
  else {document.getElementById("기후").innerHTML = '기후 : ' + 타일정보[선택타일].구분1차+타일정보[선택타일].구분2차+타일정보[선택타일].구분3차}
  document.getElementById("타일번호").innerHTML = '타일번호 : ' + 선택타일
  document.getElementById("위도").innerHTML = '위도 : ' + (((parseInt(선택타일 / 19))-9)*-10)
  document.getElementById("지형").innerHTML = '지형 : ' + 타일정보[선택타일].지형

  document.getElementById("연평균기온").innerHTML = '연평균기온 : ' + 타일정보[선택타일].연평균기온
  document.getElementById("분기별기온").innerHTML = '분기별기온 : ' + 타일정보[선택타일].기온
  document.getElementById("연강수량").innerHTML = '연강수량 : ' + 타일정보[선택타일].연강수량
  document.getElementById("분기별강수").innerHTML = '분기별강수 : ' + 타일정보[선택타일].강수량
  document.getElementById("증발력").innerHTML = '증발력 : ' + 타일정보[선택타일].증발력

  document.getElementById("바람방향").innerHTML = '바람방향 : ' + 타일정보[선택타일].바람방향
  document.getElementById("바다영향").innerHTML = '바다영향 : ' + 타일정보[선택타일].바다영향
  document.getElementById("분기별기단영향").innerHTML = '분기별기단영향 : ' + 타일정보[선택타일].기단영향

  var canvas = document.getElementById('그래프'); var ctx = canvas.getContext("2d");
  let 강수량 = 타일정보[선택타일].강수량; let 기온 = 타일정보[선택타일].기온; let 그래프분활 = (그래프크기 / 8);
  ctx.fillStyle = 'Snow';
  ctx.fillRect(0, 0, 그래프크기, 그래프크기);
  ctx.lineWidth = 20; ctx.strokeStyle = 'Blue';
  ctx.beginPath(); ctx.moveTo((그래프분활 * -1), 그래프크기 - 강수량[4]);
  ctx.lineTo((그래프분활 * 1), 그래프크기 - 강수량[1]);
  ctx.lineTo((그래프분활 * 3), 그래프크기 - 강수량[2]);
  ctx.lineTo((그래프분활 * 5), 그래프크기 - 강수량[3]);
  ctx.lineTo((그래프분활 * 7), 그래프크기 - 강수량[4]);
  ctx.lineTo((그래프분활 * 9), 그래프크기 - 강수량[1]);
  ctx.stroke();
  ctx.strokeStyle = 'Red';
  ctx.beginPath(); ctx.moveTo((그래프분활 * -1), (그래프크기 - 20) - ((기온[4] - 기본기온) * ((그래프크기 - 50) / 태양열)));
  ctx.lineTo((그래프분활 * 1), (그래프크기 - 20) - ((기온[1] - 기본기온) * ((그래프크기 - 50) / 태양열)));
  ctx.lineTo((그래프분활 * 3), (그래프크기 - 20) - ((기온[2] - 기본기온) * ((그래프크기 - 50) / 태양열)));
  ctx.lineTo((그래프분활 * 5), (그래프크기 - 20) - ((기온[3] - 기본기온) * ((그래프크기 - 50) / 태양열)));
  ctx.lineTo((그래프분활 * 7), (그래프크기 - 20) - ((기온[4] - 기본기온) * ((그래프크기 - 50) / 태양열)));
  ctx.lineTo((그래프분활 * 9), (그래프크기 - 20) - ((기온[1] - 기본기온) * ((그래프크기 - 50) / 태양열)));
  ctx.stroke();
}

function 마우스이동(event) { var 지도X = event.offsetX - 10; var 지도Y = event.offsetY - 10;
  if (클릭 == 1) {
    if (event.target.id == '지도' && 0 <= 지도X && 지도X < 지도크기 && 0 <= 지도Y && 지도Y < 지도크기) {
      let 타일크기 = 지도크기 / 19; 위도 = parseInt(지도Y / 타일크기)+1; 경도 = parseInt(지도X / 타일크기)+1; 선택타일 = ((위도-1)*19)+경도;
      if (지도모드 == '편집') {지형에디터(선택타일)} else {타일정보선택(선택타일)}
    }
    else if (event.target.id == '기후선택') {지도모드 = '기후'; 전체계산(); 출력();}
    else if (event.target.id == '단순기후선택') {지도모드 = '단순기후'; 전체계산(); 출력();}
    else if (event.target.id == '편집선택') {지도모드 = '편집'; 출력();}
    else if (event.target.id == '흰색선택') {지도모드 = '흰색'; 출력();}

    else if (event.target.id == '에디터모드땅선택') {에디터모드 = '땅';}
    else if (event.target.id == '에디터모드바다선택') {에디터모드 = '바다';}

    else if (event.target.id == '분기1선택') {선택분기 = 1; 출력();}
    else if (event.target.id == '분기2선택') {선택분기 = 2; 출력();}
    else if (event.target.id == '분기3선택') {선택분기 = 3; 출력();}
    else if (event.target.id == '분기4선택') {선택분기 = 4; 출력();}
  }
}

function 마우스클릭(event) {
  if (event.target.id == '자전모드') {if (자전여부 == 0) {자전여부 = 1;} else {자전여부 = 0;} 전체계산(); 출력();}
  else if (event.target.id == '경계선표시모드') {if (타일경계 == 0) {타일경계 = 1;} else {타일경계 = 0;} 출력();}
  else if (event.target.id == '바람표시모드') {if (바람표시 == 0) {바람표시 = 1;} else {바람표시 = 0;}; 출력();}
  else if (event.target.id == '기온모드') {if (기온표시 == 0) {기온표시 = 1; 강수표시 = 0;} else {기온표시 = 0;}; 출력();}
  else if (event.target.id == '강수모드') {if (강수표시 == 0) {강수표시 = 1; 기온표시 = 0;} else {강수표시 = 0;}; 출력();}
}

function 전체기온계산() {기온계산(1, 0); 기온계산(2, -기울기); 기온계산(3, 0); 기온계산(4, 기울기);}
function 전체바람방향계산() {바람방향계산(1, 0); 바람방향계산(2, -기울기); 바람방향계산(3, 0); 바람방향계산(4, 기울기);}
function 전체바다영향계산() {바다영향계산(1, 0); 바다영향계산(2, -기울기); 바다영향계산(3, 0); 바다영향계산(4, 기울기);} 
function 전체강수량계산() {강수량계산(1, 0); 강수량계산(2, -기울기); 강수량계산(3, 0); 강수량계산(4, 기울기);}

function 전체계산() {전체기온계산(); 전체바람방향계산(); 전체바다영향계산(); 기단생성(); 전체강수량계산(); 기후구분();}

//실행
var 클릭 = 0; document.body.onmousedown = function() {클릭 = 1;}; document.body.onmouseup = function() {클릭 = 0;}

남고압대img.onload = function() {
  전체계산(); 출력();
  window.addEventListener("resize", function() {출력()});
  타일정보선택(선택타일)
  window.addEventListener('mousemove', 마우스이동);
  window.addEventListener('mousedown', 마우스이동); window.addEventListener('mousedown', 마우스클릭);
}